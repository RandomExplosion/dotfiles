;
;   This file contains the submodules used in widgets.yuck
;

(defwidget mic_box [mic_vol_percent]
 (eventbox 
   :cursor "pointer"
   :onclick "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle" :onhover "eww update mic_hover=true" 
   :onhoverlost "eww update mic_hover=false"
   :onscroll "${mic_initial == false ? `[ {} = up ] && $HOME/.config/eww/scripts/sound_state.zsh -mic_up; \
                                          [ {} = down ] && $HOME/.config/eww/scripts/sound_state.zsh -mic_down` : ""}"
   (box 
     :space-evenly false :spacing 0
           (label :class "${mic_initial == false ? "mic_box" : "mic_box_off"} glyph_meslo"
                  :text "${mic_initial == false ? "" : "" }")
           (label :class "${mic_initial == false ? "mic_box_text" : ""}" 
                  :text "${mic_initial == false ? mic_vol_percent : ""}")
           (revealer :reveal mic_hover :transition "slideright" :duration "0.5s" 
                  (label :class "${mic_initial == true ? "mic_box_text_off" : ""}"
                         :text "${mic_initial == true ? "Muted" : ""}")))))
  
(defwidget sound_box [vol_icon_off vol_num_off
                      vol_percent vol_max vol_mid vol_min] 
                      
 (eventbox 
   :cursor "pointer" :onhover "eww update vol_hover=true"
   :onhoverlost "eww update vol_hover=false" 
   :onscroll "${muted != "true" ? '[ {} = up ] && wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-; \
                                          [ {} = down ] && wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+' : ""}"
   :onclick "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle" :onrightclick "control_box -pavu_toggle &"
        (box 
          :spacing 0 :space-evenly false
            (label 
              :class "${muted != "true" ? "vol_icon" : vol_icon_off} glyph_fira"
              :text "${muted != "true" && current_vol > 0.60 ? vol_max :
                       muted != "true" && current_vol > 0.25 ? vol_mid :
                       muted != "true" && current_vol >= 0.10 ? vol_min : 
                       muted != "true" && current_vol < 0.10 ? vol_min : "󰝟 "}")
            (label :class "${muted == "false" ? "vol_num" : ""}"
                   :text "${muted == "false" ? vol_percent : ""}")
            (revealer :reveal vol_hover :transition "slideright" :duration "0.5s"
              (label :class "${muted == "true" ? vol_num_off : ""}"
                     :text "${muted == "true" ? "Muted" : ""}"))))) 

(defwidget nit_box []
 (eventbox 
   :cursor "pointer"
   :onscroll "${nit_level >= 10 ? "[ {} = up ] && xbacklight -time 0 +5; \
                     [ {} = down ] && xbacklight -time 0 -5" : 
                     "[ {} = up ] && xbacklight -time 0 +5"}"
   :onclick "light-toggle &"
       (box :space-evenly false :spacing 5
            :tooltip "${nit_level <= 0.5 ? "Reducing brightness is disabled below 10%" :
                                          "Click to turn off screen"}"
           (label :class "brn_icon glyph_jet" 
                  :text "${nit_level <= 25 ? "" : 
                           nit_level < 50 ? "" : 
                           nit_level < 75 ? "" : "" }")
           (label :class "brn_num" :text "${nit_level}%"))))
  
(defwidget network [wifi_icon_off wifi_text_off] 
 (eventbox 
           :onclick "rofi-net &" 
           :cursor "pointer" :width 30 
           :class "${connect == "true" ? "wifi" : "wifi_off"}" 
           :onhover "eww update net_hover=true"
           :onhoverlost "eww update net_hover=false"
            (box 
              :space-evenly false :spacing 0
                         (label :class "${connect == "true" ? "wifi_icon glyph" : wifi_icon_off}" 
                                :text "${connect == "true" ? "﹦" : "﹪"}")
              (revealer :reveal net_hover :transition "slideright" :duration "0.5s"
                (box :space-evenly false :spacing 5
                         (label :class "${connect == "true" ? "wifi_text" : wifi_text_off}" 
                                :text "${connect == "true" ? ssid : "Offline"}"))))))

(defwidget cpu_usage_box []
  (eventbox 
            :onhover "eww update usage_hover=true;${usage_toggle}"
            :onhoverlost "eww update usage_hover=false"
    (box 
        :class "container_box" :space-evenly false :spacing 0
      (revealer :reveal usage_hover :transition "slideleft" :duration "0.5s"
        (box 
            :space-evenly false :spacing 8
          (box 
              :space-evenly false 
            (label :class "cpu_usage glyph" :text "󰻠")
            (label :class "cpu_usage_text" :text "${round(EWW_CPU.avg,0)}%"))
          (eventbox
              :onrightclick "control_box -monitor &" :cursor "pointer"
            (box 
              :space-evenly false 
              (label :class "mem_usage glyph_awesome" :text "󰍛")
              (label :class "mem_usage_text" :text "${round(EWW_RAM.used_mem_perc, 0)}% (${round((EWW_RAM.used_mem/1024)/1024,0)} MiB - Wrong)")))))
      (label 
        :text 
          "${usage_hover == false ? "󰓅" : ""}"
        :class "${usage_hover == false ? "stat_bolt glyph" :
                                         "stat_bolt_off glyph" }"))))

(defwidget sensors_box []
  (eventbox
          :onhover "eww update sensors_hover=true;${sensors}"
          :onhoverlost "eww update sensors_hover=false"
    (box :class "container_box" :space-evenly false :spacing 0
      (revealer :reveal sensors_hover :transition "slideleft" :duration "0.5s"
          (box 
              :space-evenly false :spacing 8
            ; CPU PACKAGE TEMPERATURE              
            (box :space-evenly false
              ; TODO: Dedicated scss classes for usage labels

              (label :class "${sensors["coretemp-isa-0000"]["Package id 0"]["temp1_crit_alarm"] != 1 ? "sensor_glyph" : "sensor_glyph_critical" }" :text "󰻠")
              (label :text "${round(sensors["coretemp-isa-0000"]["Package id 0"]["temp1_input"], 0)}󰔄"))

            ; WIFI PACKAGE TEMPERATURE
            (box :space-evenly false
              (label :class "${round(sensors["ath10k_hwmon-pci-0200"]["temp1"]["temp1_input"], 0) < 60 ? "sensor_glyph" : "sensor_glyph_critical" }" :text "  ")
              (label :text "${round(sensors["ath10k_hwmon-pci-0200"]["temp1"]["temp1_input"], 0)}󰔄"))
              
            ; FANS
            (box :space-evenly false
              ; TODO: Identify which fan is fan 1 and which fan is fan2 (arrange readings accordingly)
              (label :class "sensor_glyph" :text "󰈐 ")
              (label :text "${round(sensors["dell_smm-isa-0000"]["fan1"]["fan1_input"], 0)},${round(sensors["dell_smm-isa-0000"]["fan2"]["fan2_input"], 0)} RPM"))

            ; Drive
            (box :space-evenly false
              (label :class "${sensors["nvme-pci-0300"]["Composite"]["temp1_alarm"] != 1 ? "sensor_glyph" : "sensor_glyph_critical" }" :text " ")
              (label :text "${round(sensors["nvme-pci-0300"]["Composite"]["temp1_input"], 0)}󰔄"))))
              
      (label 
        :text 
          "${sensors_hover == false ? "󱩱" : ""}"
        :class "${sensors_hover == false ? "stat_bolt glyph" :
                                         "stat_bolt_off glyph" }"))))