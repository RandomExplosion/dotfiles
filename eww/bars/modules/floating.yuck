; Battery Charge Indicator

(defwidget bat_indicator [bat_critical bat_icon_set bat_removed battery bat_status]
  (box :space-evenly false :spacing 0 :class "bat_bound"
    (label 
      :class "bat_icon glyph_meslo" 
      :text "${bat_status == "" ? bat_removed :
                   battery >= 95 ? bat_icon_set['100']['${bat_status}'] :
                   battery >= 85 ? bat_icon_set['090']['${bat_status}'] :
                   battery >= 75 ? bat_icon_set['080']['${bat_status}'] :
                   battery >= 65 ? bat_icon_set['070']['${bat_status}'] :
                   battery >= 55 ? bat_icon_set['060']['${bat_status}'] :
                   battery >= 45 ? bat_icon_set['050']['${bat_status}'] :
                   battery >= 35 ? bat_icon_set['040']['${bat_status}'] :
                   battery >= 25 ? bat_icon_set['030']['${bat_status}'] :
                   battery >= 15 ? bat_icon_set['020']['${bat_status}'] :
                   battery >= 05 ? bat_icon_set['010']['${bat_status}'] : 
                   battery >= 00 ? bat_icon_set['000']['${bat_status}'] : ''}")  
    (box
      (revealer
        :transition "slideleft"
        :reveal {net_hover == "true" ? "false" : unit_hover == "true" ? "false" : "true"}
    
        (label 
          :class "bat_text" :text '${battery}' :justify "left")))))

(defwidget notif_bell []
 (eventbox 
          :cursor "pointer"
          :onclick notif_switch
   (label :class "${notif_initial != '' ? 'notif_icon' : 'notif_icon_off'} notif_bell"
          :text "${notif_initial}")))
(defwidget date_time_box []
  (box
    (label :text "${date}"
           :class "time-label"
           :halign "end"
           :valign "center"
           :space-evenly "false"
           :tooltip "time"
           :orientation "h")
    (label :text time0
           :class "time-label"
           :halign "end"
           :valign "center"
           :space-evenly "false"
           :tooltip "time"
           :orientation "h"
           )))

(defwidget cpu_temp_text []
 (eventbox 
   :tooltip "Current CPU temperature" 
     (box 
       :space-evenly false :spacing 0
       (label 
        :class "${cpu_temp >= 60 ? "cpu_hot glyph_awesome" : "cpu_normal glyph"}"
        :text "${cpu_temp >= 60 ? "" : "瑩"}")
       (revealer
            :transition "slideright"
            :reveal "${usage_hover == true ? "false" : "true" }"
           (label 
             :class "${cpu_temp >= 60 ? "cpu_hot cpu_text" : "cpu_normal"}"
             :text "${cpu_temp}°C")))))

; (defwidget layout_state []
;  (box
;    (label 
;      :limit-width 1 :class "window_state glyph"
;      :text "${layout_var}")))

; (defwidget sticky_title []
;   (box
;     (label 
;       :limit-width 1 :class "window_state glyph"
;       :text "${sticky_var}")))

(defwidget title_bar []
  (box
    :space-evenly false :spacing 0
    (label
      :limit-width 60
      :class "window_title"
      :text "${window_title}")))

(defwidget network_speed []
  (box
    (revealer 
      :transition "slideleft"
      :reveal "${net_hover == true ? "false" :
                unit_hover == true ? "false" :
                usage_hover == true ? "false" :
                work_space_hover == true ? "false" : 
                launcher_hover == true ? "false" : speed_hover }"
      (box
        :class "speed_box"
        :space-evenly false :spacing 0
        (box
          :orientation "v" :space-evenly false
          :spacing 0 :valign "end"
    
          (box
            :orientation "h" :space-evenly false :spacing 0
            (label
              :class "net_icon glyph_awesome" :text "")
            (label 
              :class "net_speed"
              :text "${u_speed}"))
          (box
            :orientation "h" :space-evenly false :spacing 0
            (label
              :class "net_icon glyph_awesome" :text "")
            (label            
              :class "net_speed"
              :text "${d_speed}")))))))

(defwidget date []
 (box 
   :space-evenly false
  (label 
    :class "date" :text time)))

(defwidget system_tray []
  (eventbox 
    :cursor "pointer" :onclick tray_toggle
    (label
      :class "system_tray glyph_awesome"
      :text "${tray_initial}")))